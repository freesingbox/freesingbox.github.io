<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesingbox.github.io/news/article-47648.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Java中线程休眠的方法有几种？</title>
        <meta name="description" content="在 Java 中，让线程休眠的方法有很多，这些方法大致可以分为两类，一类是设置时间，在一段时间后自动唤醒，而另一个类是提供了一对休眠和唤醒的方法，在线程休眠之后，可以在任意时间对线程进行唤醒。  PS" />
        <link rel="icon" href="/assets/website/img/freesingbox/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Singbox节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freesingbox.github.io/news/article-47648.htm" />
    <meta property="og:site_name" content="Free Singbox节点订阅官网" />
    <meta property="og:title" content="Java中线程休眠的方法有几种？" />
    <meta property="og:image" content="https://freesingbox.github.io/uploads/20240823/500ba20dfc50cb2d076d7a35a01f8833.webp" />
        <meta property="og:release_date" content="2025-01-28T09:34:48" />
    <meta property="og:updated_time" content="2025-01-28T09:34:48" />
        <meta property="og:description" content="在 Java 中，让线程休眠的方法有很多，这些方法大致可以分为两类，一类是设置时间，在一段时间后自动唤醒，而另一个类是提供了一对休眠和唤醒的方法，在线程休眠之后，可以在任意时间对线程进行唤醒。  PS" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Java中线程休眠的方法有几种？">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link href="/assets/website/css/freesingbox/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/freesingbox/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/freesingbox/fontello.css">
    <link href="/assets/website/css/freesingbox/font-awesome.min.css" rel="stylesheet">
    <link href="/assets/website/css/freesingbox/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/freesingbox/owl.theme.default.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-VLC2BS6BYS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-VLC2BS6BYS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-md-3">
                    <div class="logo">
                                                <a href="/">
                            <span>Free Singbox</span>
                        </a>
                                            </div>
                </div>
                <div class="col-md-9">
                    <div class="navigation-wrapper">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/" title="首页">首页</a> </li>
                                                                <li><a href="/free-nodes/" title="免费节点">免费节点</a> </li>
                                                                <li><a href="/paid-subscribe/" title="推荐机场">推荐机场</a> </li>
                                                                <li><a href="/news/" title="新闻资讯">新闻资讯</a> </li>
                                                                <li><a href="#">关于</a> </li>
                                <li><a href="#">联系</a> </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- header-close -->
    <!-- page-header-start -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">Java中线程休眠的方法有几种？</h1>
                        <p class="page-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- cources-start-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="SingBoxNode官网订阅站" data-url="https://singboxnode.github.io">
                  				  				  				<p>在 Java 中，让线程休眠的方法有很多，这些方法大致可以分为两类，一类是设置时间，在一段时间后自动唤醒，而另一个类是提供了一对休眠和唤醒的方法，在线程休眠之后，可以在任意时间对线程进行唤醒。</p> <blockquote> <p>PS：休眠是指让某个线程暂停执行（进入等待状态），唤醒指的是让某个暂停的线程继续执行。</p> </blockquote> <p>线程休眠的方法有以下 5 个：</p> <ol> <li>Thread.sleep</li> <li>TimeUnit</li> <li>wait</li> <li>Condition</li> <li>LockSupport</li> </ol> <p>其中 sleep 和 TimeUnit 是让线程休眠一段时间后自动唤醒，而 wait、Condition、LockSupport 提供了一对休眠和唤醒线程的方法，可以实现任意时刻唤醒某个线程。</p> <h2 id="方法1threadsleep">方法1：Thread.sleep</h2> <p>Thread.sleep 方法来自于 Thread 类，它是一个 native 本地方法，其实现源码如下：</p> <pre><code class="language-java">public static native void sleep(long millis) throws InterruptedException;</code></pre> <p><strong>Thread.sleep 方法需要传递一个 long 类型的毫秒数，表示 n 毫秒之后自动唤醒</strong>，它的基础用法如下：</p> <pre><code class="language-java">Thread t1 = new Thread() {     @Override     public void run() {         System.out.println("线程执行：" + LocalDateTime.now());         try {             Thread.sleep(1000);         } catch (InterruptedException e) {             e.printStackTrace();         }         System.out.println("线程结束：" + LocalDateTime.now());     } }; t1.start();</code></pre> <p>以上程序的执行结果如下图所示：</p> <h2 id="方法2timeunit">方法2：TimeUnit</h2> <p>sleep 方法因为要传递一个毫秒类型的参数，因此在设置大一点的时间时比较麻烦，比如设置 1 小时或 1 天时，此时我们就可以使用 TimeUnit 来替代 sleep 方法实现休眠。<br /><strong>TimeUnit 的功能和 sleep 一样，让线程休眠 N 个单位时间之后自动唤醒</strong>，它的基础用法如下：</p> <pre><code class="language-java">Thread t1 = new Thread() {     @Override     public void run() {         System.out.println("线程执行：" + LocalDateTime.now());         try {             TimeUnit.SECONDS.sleep(1); // 休眠 1s             //TimeUnit.DAYS.sleep(1); // 休眠 1 天         } catch (InterruptedException e) {             e.printStackTrace();         }         System.out.println("线程结束：" + LocalDateTime.now());     } }; t1.start();</code></pre> <p>以上程序的执行结果如下图所示：</p> <p>当我们查看 TimeUnit 源码时就会发现，它的底层是基于 Thread.sleep 方法实现的，其实现源码如下：</p> <h2 id="方法3wait">方法3：wait</h2> <p>wait/notify/notifyAll 都来自于 Object 类，其中：</p> <ul> <li>wait() / wait(long timeout)：表示让当前线程进入休眠状态。</li> <li>notify()：唤醒当前对象上的一个休眠线程。</li> <li>notifyAll()：唤醒当前对象上的所有休眠线程。</li> </ul> <p>其中 wait() 方法表示让当前线程无限期等待下去，直到遇到 notify/notifyAll 方法时才会被唤醒，而 wait(long timeout) 表示接收一个 long 类型的超时时间，如果没有遇到 notify/notifyAll 会在 long 毫秒之后自动唤醒，如果遇到了 notify/notifyAll 方法会立即被唤醒。<br /> 它的基础用法如下：</p> <pre><code class="language-java">Object lock = new Object(); new Thread(() -&gt; {     synchronized (lock) {         try {             // 让当前线程休眠             lock.wait();         } catch (InterruptedException e) {             e.printStackTrace();         }     } }).start(); synchronized (lock) {     lock.notify(); // 唤醒当前对象上一个休眠线程     // lock.notifyAll(); // 唤醒当前对象上所有休眠的线程 }</code></pre> <p>需要注意的是 wait/notify/notifyAll 在使用时必须要配合 synchronized 一起使用，否则程序执行会报错。</p> <h2 id="方法4condition">方法4：Condition</h2> <p>Condition 作为 wait 的升级版，它提供的常用方法有以下几个：</p> <ul> <li>await()：让当前线程进入等待状态，直到被通知（signal）或者被中断时才会继续执行。</li> <li>awaitUninterruptibly()：让当前线程进入等待状态，直到被通知才会被唤醒，它对线程的中断通知不做响应。</li> <li>await(long time, TimeUnit unit)：在 await() 方法的基础上添加了超时时间，如果过了超时时间还没有遇到唤醒方法则会自动唤醒并恢复执行。</li> <li>awaitUntil(Date deadline)：让当前线程进入等待状态，如果没有遇到唤醒方法也会在设置的时间之后自动唤醒。</li> <li>signal()：唤醒一个等待在 Condition 上的线程。</li> <li>signalAll()：唤醒等待在 Condition 上所有的线程。</li> </ul> <p>它的基本用法如下：</p> <pre><code class="language-java">import java.time.LocalDateTime; import java.util.concurrent.locks.Condition; import java.util.concurrent.locks.Lock; import java.util.concurrent.locks.ReentrantLock;  public class ConditionExample {     public static void main(String[] args) throws InterruptedException {         // 创建锁         final Lock lock = new ReentrantLock();         // 创建 Condition         final Condition condition = lock.newCondition();         new Thread(() -&gt; {             System.out.println("线程执行：" + LocalDateTime.now());             lock.lock(); // 得到锁             try {                 // 休眠线程                 condition.await();             } catch (InterruptedException e) {                 e.printStackTrace();             } finally {                 lock.unlock(); // 释放锁             }             System.out.println("线程结束：" + LocalDateTime.now());         }).start();         Thread.sleep(1000);         lock.lock(); // 得到锁         try {             // 唤醒线程             condition.signal();         } finally {             lock.unlock(); // 释放锁         }     } }</code></pre> <p>相比于 wait 方法，Condition 对象更加灵活，因为它可以在一把锁上定义多个 Condition 对象进行使用，如下代码所示：</p> <pre><code class="language-java"> // 创建锁 final Lock lock = new ReentrantLock(); // 创建 Condition 1 final Condition condition = lock.newCondition(); // 创建 Condition 2 final Condition condition2 = lock.newCondition(); // ......</code></pre> <h2 id="方法5locksupport">方法5：LockSupport</h2> <p>LockSupport 是更加底层的操作线程休眠和唤醒的对象，它提供了两个常用的方法：</p> <ul> <li>LockSupport.park()：休眠当前线程。</li> <li>LockSupport.unpark(Thread thread)：唤醒一个指定的线程。</li> </ul> <p>它的基础用法如下：</p> <pre><code class="language-java">Thread t1 = new Thread(() -&gt; {     System.out.println("线程1休眠");     LockSupport.park(); // 休眠线程     System.out.println("线程1执行结束"); }, "线程1"); t1.start();  Thread t2 = new Thread(() -&gt; {     System.out.println("线程2休眠");     LockSupport.park(); // 休眠线程     System.out.println("线程2执行结束"); }, "线程2"); t2.start();  Thread t3 = new Thread(() -&gt; {     try {         Thread.sleep(1000);     } catch (InterruptedException e) {         e.printStackTrace();     }     System.out.println("唤醒线程1");     LockSupport.unpark(t1); // 唤醒线程1 }, "线程3"); t3.start();</code></pre> <h2 id="总结">总结</h2> <p>Thread.sleep 和 TimeUnit 是让线程休眠并在一段时间后自动唤醒，而 wait、Condition、LockSupport 提供了休眠和唤醒线程的方法，其中 Condition 为 wait 方法的升级版，而 LockSupport 是更底层的让线程休眠和唤醒的方法，它可以实现唤醒某个指定的线程，这是其它方法所不具备的（功能）。</p> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-47647.htm">在同一个类中，一个方法调用另外一个有注解（比如@Async，@Transational）的方法，注解失效的原因和解决方法</a></p>
                                        <p>下一个：<a href="/news/article-48136.htm">动物***是打哪个部位（小动物打什么针）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2024-11-19-sing-box-node-github.htm" title="「11月19日」最高速度20M/S，2024年Singbox每天更新免费机场订阅节点链接">「11月19日」最高速度20M/S，2024年Singbox每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-34388.htm" title="高并发下redis缓存常见问题">高并发下redis缓存常见问题</a></li>
                        <li class="py-2"><a href="/news/article-41708.htm" title="vue如何将对象中所有的key赋为空值_vue.js">vue如何将对象中所有的key赋为空值_vue.js</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-9-free-node-subscribe-links.htm" title="「12月9日」最高速度22.1M/S，2024年Singbox每天更新免费机场订阅节点链接">「12月9日」最高速度22.1M/S，2024年Singbox每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-34866.htm" title="python中，用pyspark读写Hive数据">python中，用pyspark读写Hive数据</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-18-sing-box-node-github.htm" title="「1月18日」最高速度20.5M/S，2025年Singbox每天更新免费机场订阅节点链接">「1月18日」最高速度20.5M/S，2025年Singbox每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-42700.htm" title="义乌哪里有领养宠物狗（义乌哪里可以领养流浪猫）">义乌哪里有领养宠物狗（义乌哪里可以领养流浪猫）</a></li>
                        <li class="py-2"><a href="/news/article-42213.htm" title="河南省动物疫苗管理系统官网查询（河南省动物疫病强制免疫疫苗信息管理系统）">河南省动物疫苗管理系统官网查询（河南省动物疫病强制免疫疫苗信息管理系统）</a></li>
                        <li class="py-2"><a href="/news/article-43201.htm" title="猫多久不回家就算丢了（猫咪走失后一般会躲在哪里）">猫多久不回家就算丢了（猫咪走失后一般会躲在哪里）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-9-sing-box-node.htm" title="「11月9日」最高速度22.5M/S，2024年Singbox每天更新免费机场订阅节点链接">「11月9日」最高速度22.5M/S，2024年Singbox每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">34</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
        <!-- footer start -->
    <div class="footer">
        <div class="container">
            <div class="row">
                <!-- footer-about-close -->
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                    <div class="footer-line"></div>
                </div>
                <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>
                        <a href="/">Free Singbox节点订阅官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <div class="footer-social">
                        <a href="#"><span><i class="fa fa-facebook"></i></span></a>
                        <a href="#"><span><i class="fa fa-google-plus"></i></span> </a>
                        <a href="#"><span class="active"><i class="fa fa-twitter"></i> </span></a>
                        <a href="#"><span><i class="fa fa-instagram"></i></span> </a>
                        <a href="#"><span><i class=" fa fa-pinterest"></i> </span></a>
                        <a href="#"><span><i class="fa fa-linkedin"></i></span></a> </div>
                </div>
            </div>
        </div>
        <!-- footer-address-close -->
    </div>
    <!-- footer close -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/freesingbox/jquery-3.5.1.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/freesingbox/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/freesingbox/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/slider.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>