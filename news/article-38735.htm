<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesingbox.github.io/news/article-38735.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>springboot 整合 gridfs 、webUploader实现大文件分块上传、断点续传、秒传</title>
        <meta name="description" content="主要的pom.xml： &lt;dependency&gt;             &lt;groupId&gt;mysql&lt;/groupId&gt;             &lt;arti" />
        <link rel="icon" href="/assets/website/img/freesingbox/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Singbox节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freesingbox.github.io/news/article-38735.htm" />
    <meta property="og:site_name" content="Free Singbox节点订阅官网" />
    <meta property="og:title" content="springboot 整合 gridfs 、webUploader实现大文件分块上传、断点续传、秒传" />
    <meta property="og:image" content="https://freesingbox.github.io/uploads/20240823/fd077e98fb380ef18af852ed5e4f79d5.webp" />
        <meta property="og:release_date" content="2025-01-10T10:44:26" />
    <meta property="og:updated_time" content="2025-01-10T10:44:26" />
        <meta property="og:description" content="主要的pom.xml： &lt;dependency&gt;             &lt;groupId&gt;mysql&lt;/groupId&gt;             &lt;arti" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="springboot 整合 gridfs 、webUploader实现大文件分块上传、断点续传、秒传">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link href="/assets/website/css/freesingbox/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/freesingbox/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/freesingbox/fontello.css">
    <link href="/assets/website/css/freesingbox/font-awesome.min.css" rel="stylesheet">
    <link href="/assets/website/css/freesingbox/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/freesingbox/owl.theme.default.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-VLC2BS6BYS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-VLC2BS6BYS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-md-3">
                    <div class="logo">
                                                <a href="/">
                            <span>Free Singbox</span>
                        </a>
                                            </div>
                </div>
                <div class="col-md-9">
                    <div class="navigation-wrapper">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/" title="首页">首页</a> </li>
                                                                <li><a href="/free-nodes/" title="免费节点">免费节点</a> </li>
                                                                <li><a href="/paid-subscribe/" title="推荐机场">推荐机场</a> </li>
                                                                <li><a href="/news/" title="新闻资讯">新闻资讯</a> </li>
                                                                <li><a href="#">关于</a> </li>
                                <li><a href="#">联系</a> </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- header-close -->
    <!-- page-header-start -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">springboot 整合 gridfs 、webUploader实现大文件分块上传、断点续传、秒传</h1>
                        <p class="page-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- cources-start-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="SingBoxNode官网订阅站" data-url="https://singboxnode.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>主要的pom.xml：</p> <pre class="has"><code>&lt;dependency&gt;             &lt;groupId&gt;mysql&lt;/groupId&gt;             &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;         &lt;/dependency&gt; &lt;!--mongodb--&gt;         &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-data-mongodb&lt;/artifactId&gt;         &lt;/dependency&gt; &lt;dependency&gt;             &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;             &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;         &lt;/dependency&gt;</code></pre> <p>大家发现多了一个mysql，主要是为了在里面存文件列表用</p> <p>resource目录如下：</p> <p><img fetchpriority="high" decoding="async" alt="" class="has" height="317" src="http://img.555519.xyz/uploads/20230223/0502207960e85401cfefae22a766d752.jpg"></p> <p>application.properties：</p> <p>替换成自己的用户名密码</p> <pre class="has"><code>pring.datasource.url=jdbc:mysql://127.0.0.1:3306/hrms?useUnicode=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;serverTimezone=GMT spring.datasource.username=root spring.datasource.password=123456 spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver spring.jpa.database=mysql #自动建表 spring.jpa.hibernate.ddl-auto=update #设置数据库方言 spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect #打印sql spring.jpa.show-sql=true  #连接mongodb spring.data.mongodb.uri=mongodb://127.0.0.1:27017/mydb spring.data.mongodb.username=root spring.data.mongodb.password=123456</code></pre> <p>&nbsp;</p> <p>&nbsp;前端upload.html：</p> <p>进度条仅为测试，样式有点丑请忽略（webUploader官网的例子有点问题，需要自己调一下）</p> <pre class="has"><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;Title&lt;/title&gt;     &lt;!--引入CSS--&gt;     &lt;link  type="text/css" href="/css/webuploader.css"&gt;     &lt;!--引入JS--&gt;     &lt;script type="text/javascript" src="/js/admin.js"&gt;&lt;/script&gt;     &lt;script type="text/javascript" src="/js/jquery-3.3.1.min.js"&gt;&lt;/script&gt;     &lt;script type="text/javascript" src="/js/webuploader.js"&gt;&lt;/script&gt;     &lt;!--SWF在初始化的时候指定，在后面将展示--&gt;     &lt;style&gt;         #ctlBtn {             top: 0px;             left: 0px;             width: 94px;             height: 40.8px;             overflow: hidden;             bottom: auto;             right: auto;         }     &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="uploader" class="wu-example"&gt;     &lt;!--用来存放文件信息--&gt;     &lt;div id="thelist" class="uploader-list"&gt;&lt;/div&gt;     &lt;div class="btns"&gt;         &lt;div id="picker"&gt;选择文件&lt;/div&gt;         &lt;button id="ctlBtn" class="btn btn-default"&gt;开始上传&lt;/button&gt;     &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;script&gt;     var md5;     //监听分块上传过程中的三个时间点     WebUploader.Uploader.register({         "before-send-file": "beforeSendFile",         "before-send": "beforeSend",         "after-send-file": "afterSendFile"     }, {         //时间点1：所有分块进行上传之前调用此函数         beforeSendFile: function (file) {             var deferred = WebUploader.Deferred();             //1、计算文件的唯一标记，用于断点续传             (new WebUploader.Uploader()).md5File(file, 0, 10 * 1024 * 1024)                 .progress(function (percentage) {                     $('#' + file.id).find("p.state").text("正在读取文件信息...");                 })                 .then(function (val) {                     md5 = val;                     $('#' + file.id).find("p.state").text("成功获取文件信息...");                     //获取文件信息后进入下一步                     deferred.resolve();                 });             return deferred.promise();         },         //时间点2：如果有分块上传，则每个分块上传之前调用此函数         beforeSend: function (block) {             var deferred = WebUploader.Deferred();             $.ajax({                 type: "get",                 url: BASE_PATH + "/check",                 data: {                     //文件唯一标记                     "md5": md5,                     //当前分块下标                     "chunk": block.chunk,                     //当前分块大小                     "chunkSize": block.end - block.start                 },                 //无缓存                 cache: false,                 //无异步（必须加，否则异步上传会上传已经上传过的块）                 async: false,                 dataType: "json",                 success: function (data) {                     if (data) {                         //分块存在，跳过                         deferred.reject();                     } else {                         //分块不存在或不完整，重新发送该分块内容                         deferred.resolve();                     }                 }             });              this.owner.options.formData.md5 = md5;             deferred.resolve();             return deferred.promise();         }         //时间点3：所有分块上传成功后调用此函数         // afterSendFile: function () {         //     //如果分块上传成功，则通知后台合并分块         //     $.ajax({         //         type: "POST",         //         url: "&lt;%=basePath%&gt;Video?action=mergeChunks",         //         data: {         //             md5: md5,         //         },         //         success: function (response) {         //             alert("上传成功");         //             var path = "uploads/" + md5 + ".mp4";         //             $("#item1").attr("src", path);         //         }         //     });         // }     });     var uploader = WebUploader.create({         // swf文件路径         swf: BASE_PATH + "/js/Uploader.swf",         // 文件接收服务端。         server: BASE_PATH + "/upload",         // 选择文件的按钮。可选。         // 内部根据当前运行是创建，可能是input元素，也可能是flash.         pick: "#picker",         // 不压缩image, 默认如果是jpeg，文件上传前会压缩一把再上传！         resize: false,         //开启分片上传         chunked: true,         //分片大小         chunkSize: 10 * 1024 * 1024,         //并发数         threads: 10         //请求参数表         // formData:datalist,     });      $("#ctlBtn").on("click", function () {         uploader.upload();     });      // 当有文件被添加进队列的时候     uploader.on('fileQueued', function (file) {         $("#thelist").append("&lt;div id=\"" + file.id + "\" class=\"item\"&gt;" +             "&lt;h4 class=\"info\"&gt;" + file.name + "&lt;/h4&gt;" +             "&lt;p class=\"state\"&gt;等待上传...&lt;/p&gt;" +             "&lt;/div&gt;");         // //暂停上传的文件         // $("#thelist").on('click', '.stop', function () {         //     uploader.stop(true);         // }),         // //删除上传的文件         // $("#thelist").on('click', '.remove', function () {         //     if ($(this).parents(".item").attr('id') === file.id) {         //         uploader.removeFile(file);         //         $(this).parents(".item").remove();         //     }         // })     });      // 文件上传过程中创建进度条实时显示。     uploader.on('uploadProgress', function (file, percentage) {         var $li = $('#' + file.id);         var $percent = $li.find('.progress .progress-bar');          // 避免重复创建         if (!$percent.length) {             // $percent = $('&lt;div class="progress progress-striped active"&gt;' +             //     '&lt;div class="progress-bar" role="progressbar" style="width: 0%"&gt;' +             //     '&lt;/div&gt;' +             //     '&lt;/div&gt;').appendTo($li).find('.progress-bar');             $percent = $('&lt;div class="progress progress-striped active"&gt;' +                 '&lt;div class="progress-bar" role="progressbar" style="width: 0%"&gt;' +                 '&lt;/div&gt;' +                 '&lt;/div&gt;').appendTo($li).find('.progress');         }         $li.find('p.state').text('上传中');         $percent.css({'width': percentage * 100 + '%', 'height': 10, 'background-color': 'blue'});     });       uploader.on('uploadSuccess', function (file) {         $('#' + file.id).find('p.state').text('已上传');     });      uploader.on('uploadError', function (file) {         $('#' + file.id).find('p.state').text('上传出错');     });      uploader.on('uploadComplete', function (file) {         $('#' + file.id).find('.progress').fadeOut();     });  &lt;/script&gt; &lt;/html&gt;</code></pre> <p>前端download.html</p> <pre class="has"><code class="language-html">&lt;!DOCTYPE html&gt; &lt;html lang="en"&gt; &lt;head&gt;     &lt;meta charset="UTF-8"&gt;     &lt;title&gt;download&lt;/title&gt;     &lt;script type="text/javascript" src="/js/admin.js"&gt;&lt;/script&gt;     &lt;script type="text/javascript" src="/js/jquery-3.3.1.min.js"&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div id="fileList"&gt;  &lt;/div&gt; &lt;/body&gt; &lt;script type="text/javascript"&gt;     function download(id) {         window.location.href = BASE_PATH + "/download?md5=" + id;     }      $.ajax({         url: BASE_PATH + "/fileList",         type: "get",         success: function (data) {             $.each(data, function (index, val) {                 var html = "&lt;p&gt;" + val.name + "&lt;/p&gt;&lt;button onclick=\"download('" + val.id + "')\"&gt;下载&lt;/button&gt;";                 $("#fileList").append(html);             })         }     })  &lt;/script&gt; &lt;/html&gt;</code></pre> <p>存BASE_PATH的admin.js：</p> <pre class="has"><code class="language-javascript">var obj = window.document.location; var BASE_PATH = obj.href.substring(0, obj.href.indexOf(obj.pathname));</code></pre> <p>最重要的后端FileController：</p> <p>文件上传至gridfs，直接存的块</p> <pre class="has"><code class="language-java">package com.example.demo.controller;  import com.example.demo.entity.FileEntity; import com.example.demo.jpa.FileJpa; import com.mongodb.BasicDBObject; import com.mongodb.gridfs.GridFS; import com.mongodb.gridfs.GridFSDBFile; import com.mongodb.gridfs.GridFSInputFile; import org.apache.commons.lang3.StringUtils; import org.springframework.beans.factory.annotation.Autowired; import org.springframework.data.domain.Example; import org.springframework.data.mongodb.MongoDbFactory; import org.springframework.web.bind.annotation.GetMapping; import org.springframework.web.bind.annotation.PostMapping; import org.springframework.web.bind.annotation.RequestParam; import org.springframework.web.bind.annotation.RestController; import org.springframework.web.multipart.MultipartFile;  import javax.servlet.ServletOutputStream; import javax.servlet.http.HttpServletResponse; import java.io.IOException; import java.io.InputStream; import java.net.URLEncoder; import java.util.List;  /**  * @author FastKing  * @version 1.0  * @date 2018/10/26 9:56  **/ @RestController public class FileController {  	@Autowired 	private MongoDbFactory mongoDbFactory;  	@Autowired 	private FileJpa fileJpa;  	@GetMapping("/fileList") 	public Object list() { 		return fileJpa.findAll(); 	}  	@PostMapping("/upload") 	public void upload(@RequestParam(value = "file") MultipartFile file, 					   @RequestParam(value = "md5") String md5, 					   @RequestParam(value = "chunk", defaultValue = "0", required = false) String chunk, 					   @RequestParam(value = "name") String name) { 		FileEntity fileEntity = new FileEntity(); 		fileEntity.setId(md5); 		fileEntity.setName(name); 		if (!fileJpa.findOne(Example.of(fileEntity)).isPresent()) { 			fileJpa.save(fileEntity); 		} 		BasicDBObject basicDBObject = new BasicDBObject(); 		//块下标，下载文件时需要合并块，用这个参数排序 		basicDBObject.append("chunk", Short.valueOf(chunk)); 		//块大小，断点续传时，用这个参数判断该块是否完整上传 		basicDBObject.append("chunkSize", file.getSize()); 		//文件唯一标识，用来筛选对应文件的所有块 		basicDBObject.append("md5", md5); 		GridFS gridFS = new GridFS(mongoDbFactory.getLegacyDb()); 		try { 			GridFSInputFile inputFile = gridFS.createFile(file.getInputStream(), name.substring(0, name.lastIndexOf("."))); 			//设置文件类型 			inputFile.setContentType(name.substring(name.lastIndexOf(".") + 1)); 			//存入元数据 			inputFile.setMetaData(basicDBObject); 			inputFile.save(); 		} catch (IOException e) { 			e.printStackTrace(); 		} 	}  	@GetMapping("/download") 	public void download(@RequestParam(value = "md5") String md5, HttpServletResponse response) { 		//1.设置文件ContentType类型，这样设置，会自动判断下载文件类型 		response.setContentType("text/html;charset=utf-8"); 		response.setContentType("application/x-download"); 		response.addHeader("Cache-Control", "no-cache"); 		GridFS gridFS = new GridFS(mongoDbFactory.getLegacyDb()); 		//两个BasicDBObject，第一个为筛选条件，第二个为排序（-1为DESC倒序，1为ASC正序） 		List&lt;GridFSDBFile&gt; gridFSDBFiles = gridFS.find(new BasicDBObject("metadata.md5", md5), new BasicDBObject("metadata.chunk", 1)); 		byte[] buffer = new byte[1024]; 		try { 			ServletOutputStream outputStream = response.getOutputStream(); 			Long lenth = 0L; 			for (GridFSDBFile gridFSDBFile : gridFSDBFiles) { 				//2.设置文件头： 				response.setHeader("Content-Disposition", "attachment;filename=" + URLEncoder.encode(gridFSDBFile.getFilename() + "." + gridFSDBFile.getContentType(), "utf-8")); 				lenth += gridFSDBFile.getLength(); 				int count; 				InputStream inputStream = gridFSDBFile.getInputStream(); 				while ((count = inputStream.read(buffer)) &gt; 0) { 					outputStream.write(buffer, 0, count); 				} 				inputStream.close(); 			} 			response.setHeader("Content-Length", "" + lenth); 		} catch (IOException e) { 			e.printStackTrace(); 		} 	}  	@GetMapping("/check") 	public Object check(@RequestParam(value = "md5") String md5, 						@RequestParam(value = "chunk", required = false) String chunk, 						@RequestParam(value = "chunkSize", required = false) String chunkSize) { 		GridFS gridFS = new GridFS(mongoDbFactory.getLegacyDb()); 		BasicDBObject basicDBObject = new BasicDBObject(); 		//根据文件唯一标识和块下标确定唯一一个块 		basicDBObject.append("metadata.md5", md5); 		basicDBObject.append("metadata.chunk", Short.valueOf(chunk)); 		GridFSDBFile file = gridFS.findOne(basicDBObject); 		//判断该块是否上传过，或是否上传完整 		if (null != file &amp;&amp; Short.valueOf(file.getMetaData().get("chunkSize").toString()).equals(Short.valueOf(chunkSize))) { 			return true; 		} else if (null != file) { 			//如果上传不完整则重新上传 			gridFS.remove(basicDBObject); 		} 		return false; 	}  } </code></pre> <p>&nbsp;</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-38246.htm">政府购买动物防疫服务外包方案（政府购买动物防疫服务外包方案怎么写）</a></p>
                                        <p>下一个：<a href="/news/article-38738.htm">动物医院实践心得500字（动物医院实践心得5000）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-2-2-free-node-subscribe-links.htm" title="「2月2日」最高速度21.3M/S，2025年Singbox每天更新免费机场订阅节点链接">「2月2日」最高速度21.3M/S，2025年Singbox每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-28686.htm" title="宠物疫苗可以上地铁吗北京（北京宠物猫可以上地铁吗）">宠物疫苗可以上地铁吗北京（北京宠物猫可以上地铁吗）</a></li>
                        <li class="py-2"><a href="/news/article-23593.htm" title="动物疫苗注射器视频教程（动物疫苗注射注意事项）">动物疫苗注射器视频教程（动物疫苗注射注意事项）</a></li>
                        <li class="py-2"><a href="/news/article-31420.htm" title="宠物医院申办流程及手续（宠物医院申办流程及手续图片）">宠物医院申办流程及手续（宠物医院申办流程及手续图片）</a></li>
                        <li class="py-2"><a href="/news/article-31048.htm" title="宠物医院大众点评评语（宠物医院大众点评100字点评***）">宠物医院大众点评评语（宠物医院大众点评100字点评***）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-21-node-share-links.htm" title="「11月21日」最高速度20M/S，2024年Singbox每天更新免费机场订阅节点链接">「11月21日」最高速度20M/S，2024年Singbox每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-26821.htm" title="PHP如何在同一文件中定义多个命名空间">PHP如何在同一文件中定义多个命名空间</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-30-node-share-links.htm" title="「11月30日」最高速度20.6M/S，2024年Singbox每天更新免费机场订阅节点链接">「11月30日」最高速度20.6M/S，2024年Singbox每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-44699.htm" title="宠物粮进货渠道在哪里啊知乎（宠物粮进货平台）">宠物粮进货渠道在哪里啊知乎（宠物粮进货平台）</a></li>
                        <li class="py-2"><a href="/news/article-32493.htm" title="根据第一个值分割数组-JavaScript">根据第一个值分割数组-JavaScript</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
        <!-- footer start -->
    <div class="footer">
        <div class="container">
            <div class="row">
                <!-- footer-about-close -->
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                    <div class="footer-line"></div>
                </div>
                <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>
                        <a href="/">Free Singbox节点订阅官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <div class="footer-social">
                        <a href="#"><span><i class="fa fa-facebook"></i></span></a>
                        <a href="#"><span><i class="fa fa-google-plus"></i></span> </a>
                        <a href="#"><span class="active"><i class="fa fa-twitter"></i> </span></a>
                        <a href="#"><span><i class="fa fa-instagram"></i></span> </a>
                        <a href="#"><span><i class=" fa fa-pinterest"></i> </span></a>
                        <a href="#"><span><i class="fa fa-linkedin"></i></span></a> </div>
                </div>
            </div>
        </div>
        <!-- footer-address-close -->
    </div>
    <!-- footer close -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/freesingbox/jquery-3.5.1.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/freesingbox/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/freesingbox/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/slider.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>