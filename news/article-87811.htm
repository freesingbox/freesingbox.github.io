<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://freesingbox.github.io/news/article-87811.htm" />
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Spring Security教程（13）&#8212;- 验证码功能的实现</title>
        <meta name="description" content="有三中方法可以实现验证码的功能 第一种是自定义一个filter，放在SpringSecurity过滤器之前，在用户登录的时候会先经过这个filter，然后在这个filter中实现对验证码进行验证的功能" />
        <link rel="icon" href="/assets/website/img/freesingbox/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Free Singbox节点订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://freesingbox.github.io/news/article-87811.htm" />
    <meta property="og:site_name" content="Free Singbox节点订阅官网" />
    <meta property="og:title" content="Spring Security教程（13）&#8212;- 验证码功能的实现" />
    <meta property="og:image" content="https://freesingbox.github.io/uploads/20240823/d69485da0c08bf37c40c6c16f151d28a.webp" />
        <meta property="og:release_date" content="2025-04-03T08:34:31" />
    <meta property="og:updated_time" content="2025-04-03T08:34:31" />
        <meta property="og:description" content="有三中方法可以实现验证码的功能 第一种是自定义一个filter，放在SpringSecurity过滤器之前，在用户登录的时候会先经过这个filter，然后在这个filter中实现对验证码进行验证的功能" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Security教程（13）&#8212;- 验证码功能的实现">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- Bootstrap -->
    <link href="/assets/website/css/freesingbox/bootstrap.min.css" rel="stylesheet">
    <!-- Style CSS -->
    <link href="/assets/website/css/freesingbox/style.css" rel="stylesheet">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i" rel="stylesheet">
    <!-- FontAwesome CSS -->
    <link rel="stylesheet" type="text/css" href="/assets/website/css/freesingbox/fontello.css">
    <link href="/assets/website/css/freesingbox/font-awesome.min.css" rel="stylesheet">
    <link href="/assets/website/css/freesingbox/owl.carousel.min.css" rel="stylesheet">
    <link href="/assets/website/css/freesingbox/owl.theme.default.css" rel="stylesheet">
    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-VLC2BS6BYS"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-VLC2BS6BYS');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
        <div class="header-wrapper">
        <div class="container">
            <div class="row">
                <div class="col-md-3">
                    <div class="logo">
                        <a href="/">
                                                <span>Free Singbox</span>
                                                </a>
                    </div>
                </div>
                <div class="col-md-9">
                    <div class="navigation-wrapper">
                        <div id="navigation">
                            <ul>
                                                                <li><a href="/" title="首页">首页</a> </li>
                                                                <li><a href="/free-nodes/" title="免费节点">免费节点</a> </li>
                                                                <li><a href="/paid-subscribe/" title="推荐机场">推荐机场</a> </li>
                                                                <li><a href="/client.htm" title="客户端">客户端</a> </li>
                                                                <li><a href="/news/" title="新闻资讯">新闻资讯</a> </li>
                                                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- header-close -->
    <!-- page-header-start -->
    <div class="page-header">
        <div class="container">
            <div class="row">
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                    <div class="page-section">
                        <h1 class="page-title">Spring Security教程（13）&#8212;- 验证码功能的实现</h1>
                        <p class="page-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- cources-start-->
    <div class="space-medium">
        <div class="container">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="SingBoxNode官网订阅站" data-url="https://singboxnode.github.io">
                  				  				  				<div id="content_views" class="htmledit_views"> <p>有三中方法可以实现验证码的功能</p> <p>第一种是自定义一个filter，放在SpringSecurity过滤器之前，在用户登录的时候会先经过这个filter，然后在这个filter中实现对验证码进行验证的功能，这种方法不推荐，因为它已经脱离了SpringSecurity</p> <p>第二种是自定义一个filter让它继承自UsernamePasswordAuthenticationFilter，然后重写attemptAuthentication方法在这个方法中实现验证码的功能，如果验证码错误就抛出一个继承自AuthenticationException的验证吗错误的异常比如（CaptchaException），然后这个异常就会被SpringSecurity捕获到并将异常信息返回到前台，这种实现起来比较简单</p> <pre><code class="language-java">	@Override 	public Authentication attemptAuthentication(HttpServletRequest request, 			HttpServletResponse response) throws AuthenticationException { 		 		String requestCaptcha = request.getParameter(this.getCaptchaFieldName()); 		String genCaptcha = (String)request.getSession().getAttribute("code"); 		 		logger.info("开始校验验证码，生成的验证码为："+genCaptcha+" ，输入的验证码为："+requestCaptcha); 		 		if( !genCaptcha.equals(requestCaptcha)){ 			throw new CaptchaException( 					this.messageSource.getMessage("AbstractUserDetailsAuthenticationProvider.badCaptcha",null,"Default",null)); 		} 		return super.attemptAuthentication(request, response); 	}</code></pre> <p>然后在配置文件中配置下</p> <pre><code class="language-html">	&lt;bean id="loginFilter" class="com.zrhis.system.security.DefaultUsernamePasswordAuthenticationFilter"&gt; 		&lt;property name="authenticationManager"  ref="authenticationManager"&gt;&lt;/property&gt; 		&lt;property name="authenticationSuccessHandler"&gt; 			&lt;bean class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler"&gt; 				&lt;property name="defaultTargetUrl" value="/index.jsp"&gt;&lt;/property&gt; 			&lt;/bean&gt; 		&lt;/property&gt; 		&lt;property name="authenticationFailureHandler"&gt; 			&lt;bean class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"&gt; 				&lt;property name="defaultFailureUrl" value="/login.jsp"&gt;&lt;/property&gt; 			&lt;/bean&gt; 		&lt;/property&gt; 	&lt;/bean&gt;</code></pre> <p>最后在http中加入custom-filter配置，将这个filter放在SpringSecurity的FORM_LOGIN_FILTER之前</p> <pre><code class="language-html">&lt;custom-filter ref="loginFilter" before="FORM_LOGIN_FILTER"/&gt;</code></pre> <p>最后一种是直接替换掉SpringSecurity的UsernamePasswordAuthenticationFilter，这种比较复杂，但是更为合理，也是我现在正在用的。</p> <p>如果用这种方法那么http 中的auto-config就必须去掉，而form-login配置也必须去掉，因为这个不需要了，里面的属性都需要我们自行注入。</p> <p>首先需要创建一个EntryPoint</p> <pre><code class="language-html">	&lt;bean id="authenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint"&gt; 		&lt;property name="loginFormUrl" value="/login.jsp" /&gt; 	&lt;/bean&gt;</code></pre> <p>然后在http中配置下</p> <pre><code class="language-html">&lt;sec:http access-decision-manager-ref="accessDecisionManager" 		entry-point-ref="authenticationEntryPoint"&gt;</code></pre> <p>然后我们来写CaptchaAuthenticationFilter，同样需要继承自UsernamePasswordAuthenticationFilter</p> <pre><code class="language-java">public class CaptchaAuthenticationFilter extends UsernamePasswordAuthenticationFilter{ 	 	public static final String SPRING_SECURITY_FORM_CAPTCHA_KEY = "j_captcha"; 	public static final String SESSION_GENERATED_CAPTCHA_KEY = Constant.SESSION_GENERATED_CAPTCHA_KEY; 	 	private String captchaParameter = SPRING_SECURITY_FORM_CAPTCHA_KEY; 	 	public Authentication attemptAuthentication(HttpServletRequest request, 			HttpServletResponse response) throws AuthenticationException { 		 		String genCode = this.obtainGeneratedCaptcha(request); 		String inputCode = this.obtainCaptcha(request); 		if(genCode == null) 			throw new CaptchaException(this.messages.getMessage("LoginAuthentication.captchaInvalid")); 		if(!genCode.equalsIgnoreCase(inputCode)){ 			throw new CaptchaException(this.messages.getMessage("LoginAuthentication.captchaNotEquals")); 		} 		 		return super.attemptAuthentication(request, response); 	} 	 	protected String obtainCaptcha(HttpServletRequest request){ 		return request.getParameter(this.captchaParameter); 	} 	 	protected String obtainGeneratedCaptcha (HttpServletRequest request){ 		return (String)request.getSession().getAttribute(SESSION_GENERATED_CAPTCHA_KEY); 	} 	 }</code></pre> <p>在配置文件中配置CaptchaAuthenticationFilter</p> <pre><code class="language-html">	&lt;bean id="captchaAuthenticaionFilter" class="com.zrhis.system.security.CaptchaAuthenticationFilter"&gt; 		&lt;property name="authenticationManager" ref="authenticationManager" /&gt; 		&lt;property name="authenticationFailureHandler" ref="authenticationFailureHandler" /&gt; 		&lt;property name="authenticationSuccessHandler" ref="authenticationSuccessHandler" /&gt; 		&lt;property name="filterProcessesUrl" value="/login.do" /&gt; 	&lt;/bean&gt; 	 	&lt;bean id="authenticationSuccessHandler" class="com.zrhis.system.security.SimpleLoginSuccessHandler"&gt; 		&lt;property name="defaultTargetUrl" value="/WEB-INF/app.jsp"&gt;&lt;/property&gt; 		&lt;property name="forwardToDestination" value="true"&gt;&lt;/property&gt; 	&lt;/bean&gt; 	&lt;bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler"&gt; 		&lt;property name="defaultFailureUrl" value="/login.jsp" /&gt; 	&lt;/bean&gt;</code></pre> <p>从配置文件中就可以看出来authenticationManager、authenticationFailureHandler、authenticationSuccessHandler、filterProcessesUrl等都需要我们自行注入了。</p> <p>filterProcessesUrl定义的是登录验证的地址，默认的是j_spring_security_check这里我们改成login.do</p> <p>authenticationSuccessHandler中的defaultTargetUrl定义的是登录成功后跳转到的页面</p> <p>authenticationFailureHandler中的defaultTargetUrl定义的是登录失败后跳转到的页面</p> <p>我们的首页app.jsp在/WEB-INF下所以需要使用服务器跳转，所以需要将forwardToDestination设为true，因为客户端跳转是不能直接访问WEB-INF下的内容的。</p> <p>最后在http中将FORM_LOGIN_FILTER替换掉，最终http中完整的配置就变成了下面的内容</p> <pre><code class="language-html">	&lt;sec:http access-decision-manager-ref="accessDecisionManager" 		entry-point-ref="authenticationEntryPoint"&gt; 		 		&lt;sec:access-denied-handler ref="accessDeniedHandler"/&gt; 		 		&lt;sec:session-management invalid-session-url="/login.jsp" /&gt; 		 		&lt;sec:custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/&gt; 		&lt;sec:custom-filter ref="captchaAuthenticaionFilter" position="FORM_LOGIN_FILTER"/&gt; 	&lt;/sec:http&gt;</code></pre> <p>custom-filter中before是在这个filter之前，after是之后，position是替换。</p> <p> 这样就可以实现对验证码的验证了，效果如下 </p> <div style="text-align:center">  <img decoding="async" src="http://img.555519.xyz/uploads/20230217/e56069b5c53bde8f80dc6b01b17b7af6.jpg" alt="Spring Security教程（13）---- 验证码功能的实现"> </div> <p></p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-87115.htm">人用注射器和兽用注射器有什么区别（医用注射器和兽用注射器有什么区别）</a></p>
                                        <p>下一个：<a href="/news/article-87812.htm">被猫抓了一下出了点血需要打几针狂犬（被猫抓出了一点点血要打几针）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-28-sing-box-node-github.htm" title="「3月28日」最高速度18.3M/S，2025年Singbox每天更新免费机场订阅节点链接">「3月28日」最高速度18.3M/S，2025年Singbox每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-80697.htm" title="Hbase架构与存储组件结构与功能">Hbase架构与存储组件结构与功能</a></li>
                        <li class="py-2"><a href="/news/article-77957.htm" title="315公布的安全猫粮,中国消费者协会（315消保委狗粮）">315公布的安全猫粮,中国消费者协会（315消保委狗粮）</a></li>
                        <li class="py-2"><a href="/news/article-71880.htm" title="中国兽药十强企业排名（中国兽药公司前50名）">中国兽药十强企业排名（中国兽药公司前50名）</a></li>
                        <li class="py-2"><a href="/news/article-67981.htm" title=""></a></li>
                        <li class="py-2"><a href="/news/article-87812.htm" title="被猫抓了一下出了点血需要打几针狂犬（被猫抓出了一点点血要打几针）">被猫抓了一下出了点血需要打几针狂犬（被猫抓出了一点点血要打几针）</a></li>
                        <li class="py-2"><a href="/news/article-70561.htm" title="Windows 环境 python读需kerberos认证的hdfs">Windows 环境 python读需kerberos认证的hdfs</a></li>
                        <li class="py-2"><a href="/news/article-78646.htm" title="宠物猫疫苗可以自己打么嘛多少钱（猫猫疫苗能自己打吗）">宠物猫疫苗可以自己打么嘛多少钱（猫猫疫苗能自己打吗）</a></li>
                        <li class="py-2"><a href="/news/article-73874.htm" title="小程序转h5步骤(利用uniapp)">小程序转h5步骤(利用uniapp)</a></li>
                        <li class="py-2"><a href="/news/article-89296.htm" title="动物疫苗定义及分类表（动物疫苗属于疫苗分类吗）">动物疫苗定义及分类表（动物疫苗属于疫苗分类吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">15</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
        </div>
    </div>
        <!-- footer start -->
    <div class="footer">
        <div class="container">
            <div class="row">
                <!-- footer-about-close -->
                <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 ">
                    <div class="footer-line"></div>
                </div>
                <div class="col-lg-8 col-md-8 col-sm-6 col-xs-12">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>
                        <a href="/">Free Singbox节点订阅官网</a> 版权所有 Powered by WordPress
                    </p>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-6 col-xs-12">
                    <div class="footer-social">
                        <a href="#"><span><i class="fa fa-facebook"></i></span></a>
                        <a href="#"><span><i class="fa fa-google-plus"></i></span> </a>
                        <a href="#"><span class="active"><i class="fa fa-twitter"></i> </span></a>
                        <a href="#"><span><i class="fa fa-instagram"></i></span> </a>
                        <a href="#"><span><i class=" fa fa-pinterest"></i> </span></a>
                        <a href="#"><span><i class="fa fa-linkedin"></i></span></a> </div>
                </div>
            </div>
        </div>
        <!-- footer-address-close -->
    </div>
    <!-- footer close -->
    <!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
    <script src="/assets/website/js/frontend/freesingbox/jquery-3.5.1.min.js" type="text/javascript"></script>
    <!-- Include all compiled plugins (below), or include individual files as needed -->
    <script src="/assets/website/js/frontend/freesingbox/bootstrap.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/freesingbox/menumaker.js" type="text/javascript"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/jquery.sticky.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/sticky-header.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/owl.carousel.min.js"></script>
    <script type="text/javascript" src="/assets/website/js/frontend/freesingbox/slider.js"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script><script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>